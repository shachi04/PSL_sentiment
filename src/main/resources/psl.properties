# Options are specified in a namespace hierarchy, with levels separated by '.'.
# The top levels are called bundles. Use the ConfigManager class to access them.

ontology-alignment.rdbmsdatastore.usestringids = true
fine-grained.rdbmsdatastore.usestringids = true
# Learning parameters

fine-grained.votedperceptron.schedule = true
fine-grained.votedperceptron.numsteps = 750
fine-grained.votedperceptron.stepsize = .1

psl_mln.rdbmsdatastore.usestringids = true
# Learning parameters

psl_mln.votedperceptron.schedule = true
psl_mln.votedperceptron.numsteps = 1000
psl_mln.votedperceptron.stepsize = .1

#psl_mln.em.iterations = 1000
#psl_mln.em.tolerance = 1e-5
#psl_mln.em.dualem.adagrad = true
#psl_mln.em.admmsteps = 100

# For MLNs 
# Sets MPEInference to perform Markov Logic MPE inference
#psl_mln.mpeinference.reasoner = edu.umd.cs.psl.reasoner.bool.BooleanMaxWalkSatFactory
# Sets MPEInference to perform Markov Logic marginal inference
#psl_mln.mpeinference.reasoner = edu.umd.cs.psl.reasoner.bool.BooleanMCSatFactory

# Sets LazyMPEInference to perform Markov Logic MPE inference
#psl_mln.lazympeinference.reasoner = edu.umd.cs.psl.reasoner.bool.BooleanMaxWalkSatFactory
# Sets LazyMPEInference to perform Markov Logic marginal inference
#psl_mln.lazympeinference.reasoner = edu.umd.cs.psl.reasoner.bool.BooleanMCSatFactory


#fine-grained.weightlearning.reasoner = edu.umd.cs.psl.reasoner.bool.BooleanMaxWalkSatFactory